// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Authentication & User Management
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum Role {
  ADMIN
  EDITOR
}

// Portfolio Content Models
model HeroSection {
  id              String   @id @default(cuid())
  title           String
  subtitle        String
  description     String
  ctaText         String
  ctaLink         String?
  backgroundImage String?
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("hero_sections")
}

model AboutSection {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  description String
  highlights  String[] // Array of highlight points
  image       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("about_sections")
}

model Skill {
  id          String        @id @default(cuid())
  name        String
  category    SkillCategory
  level       Int           @default(80) // 0-100 proficiency
  description String?
  icon        String? // Icon name or URL
  order       Int           @default(0)
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("skills")
}

enum SkillCategory {
  FRONTEND
  BACKEND
  DATABASE
  DEVOPS
  DESIGN
  TOOLS
  FRAMEWORKS
  LANGUAGES
}

model Project {
  id           String          @id @default(cuid())
  title        String
  description  String
  shortDesc    String? // Short description for cards
  content      String? // Rich content/markdown
  status       ProjectStatus   @default(COMPLETED)
  category     ProjectCategory
  technologies String[] // Array of tech stack
  features     String[] // Array of key features

  // URLs and Links
  liveUrl      String?
  githubUrl    String?
  caseStudyUrl String?

  // Media
  thumbnail String?
  images    ProjectImage[]

  // Metadata
  startDate  DateTime?
  endDate    DateTime?
  duration   String? // e.g., "3 months"
  clientName String?
  teamSize   Int?

  // Display
  isFeatured Boolean @default(false)
  order      Int     @default(0)
  isActive   Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("projects")
}

model ProjectImage {
  id        String  @id @default(cuid())
  url       String
  alt       String?
  caption   String?
  order     Int     @default(0)
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("project_images")
}

enum ProjectStatus {
  PLANNING
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

enum ProjectCategory {
  WEB_APP
  MOBILE_APP
  WEBSITE
  API
  LIBRARY
  TOOL
  DESIGN
  OTHER
}

model Service {
  id          String   @id @default(cuid())
  title       String
  description String
  features    String[] // Array of service features
  icon        String?
  price       String? // e.g., "Starting at $1000"
  duration    String? // e.g., "2-4 weeks"
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("services")
}

model Achievement {
  id          String   @id @default(cuid())
  title       String
  description String
  value       String // e.g., "50+", "99%"
  icon        String?
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("achievements")
}

model Experience {
  id          String         @id @default(cuid())
  title       String
  company     String
  location    String?
  type        ExperienceType @default(FULL_TIME)
  description String
  highlights  String[] // Array of key achievements
  startDate   DateTime
  endDate     DateTime? // null for current position
  isCurrent   Boolean        @default(false)
  order       Int            @default(0)
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@map("experiences")
}

enum ExperienceType {
  FULL_TIME
  PART_TIME
  CONTRACT
  FREELANCE
  INTERNSHIP
}

model ContactMethod {
  id          String      @id @default(cuid())
  type        ContactType
  label       String
  value       String
  description String?
  icon        String?
  isActive    Boolean     @default(true)
  order       Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("contact_methods")
}

enum ContactType {
  EMAIL
  PHONE
  LOCATION
  WEBSITE
}

model SocialLink {
  id            String   @id @default(cuid())
  platform      String // e.g., "GitHub", "LinkedIn"
  username      String
  url           String
  icon          String?
  followerCount String? // e.g., "1.2K followers"
  isActive      Boolean  @default(true)
  order         Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("social_links")
}

model ContactSubmission {
  id        String           @id @default(cuid())
  firstName String
  lastName  String
  email     String
  phone     String?
  message   String
  status    SubmissionStatus @default(NEW)
  readAt    DateTime?
  repliedAt DateTime?
  notes     String?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@map("contact_submissions")
}

enum SubmissionStatus {
  NEW
  READ
  REPLIED
  ARCHIVED
}

model SiteSettings {
  id          String      @id @default(cuid())
  key         String      @unique
  value       String
  description String?
  type        SettingType @default(STRING)
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("site_settings")
}

enum SettingType {
  STRING
  NUMBER
  BOOLEAN
  JSON
  URL
  EMAIL
}

model MediaFile {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  url          String
  mimeType     String
  size         Int // File size in bytes
  alt          String?
  caption      String?
  folder       String? // Organization folder
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("media_files")
}
